

outline tables & diagrams
===================
- [ ] Table 1: related work: render engine, procedural?, use OSM/Sat?, Video Game Map?, online learning?, Open Source engine+framework?
- [ ] Table 2: intro theme question, justification, literary reference:
   - why procedurally generated for machine learning? (variation, endless combinations, etc)
   - how what is a realistic image?
   - what classes of types imagery are needed? what classes for semantic segmentations are needed?
   - why open source technology and user-customizations are needed?
   - why is on-line learning needed instead of offline learning from dataset
   - what is domain transfer and why it's a problem 
- [x] Fig 1: data pipeline (OSM + sat + models + geometry --> various object classes)
- [x] Fig 2: renderer/simulator main loop
- [x] Fig 3: environment creation
- [x] Fig 4: satellites + LOD
- [ ] Fig 5: OSM paths for Roads, trains
- [ ] Fig 6: railroad details creation GEOMETRY + result
- [ ] Fig 7: road texturing, marking proximity
- [ ] Fig 8: vegetation baking and instantiation
- [ ] Fig 9: street power line, train signs
- [ ] Fig 10: demo style transfer using SinGAN
- [ ] Table 3: run times for each per-computed component in the model
- [ ] Table 4: run times per frame different resolutions, on CPU and/or nvidia
- [ ] Fig 11: Further Work example procedural trees + vegetation
- [ ] Fig 12: Further Work example geometric building generation
- [ ] Fig 13: Further Work example Web UI Mock-up, architecture, public model database, sat tiles database, public geometry nodes database, blender plugin, etc.
- [ ] Table 5: Future Work 1 year Action Sheet (issue, person, resources required, Cost, Timeframe (short 1-3mo, medium 3-6mo, long 6-12mo)
- [ ] Table Appendix: models source, name, url, license
- [ ] Code Appendix: Online/RL/Interactive API
- [ ] Code Appendix: Export/Import Geometry Nodes
- [ ] Code Appendix: Downloading G StreetMap pics and training SinGAN model
- [ ] Screenshot Appendix: manually download Maps and GIS for demo
- [ ] Demo Video Appendix

background - subjects
==========

- [X] synthetic data generated using video games with full world (e.g. GTA, driving games)
- [ ] enviromnet data rendering for real-world drone & vision AI
- [ ] Procedurally Generated Graphics and Geometry Nodes
- [ ] Online Learning Reinforcement Learning & other specific interactivity apps



checklist wiki RD
=========

- [ ] De ce este relevant proiectul? 
        (de ce este relevant domeniul proiectului, ce creșteri sau evoluții determină rezolvarea proiectului)
- [ ] Ce neajunsuri există (pe care proiectul le va rezolva)? 
         (Ce aspecte din domeniul proiectului nu există implementate/dezvoltate? Ce aspecte sunt rezolvate ineficient sau neoptim? Ce aspecte merită îmbunătățite?)
- [ ] De ce alte proiecte nu le rezolvă? 
          (Ce alte proiecte/abordări/idei sunt dezvoltate? Ce rezolvă fiecare? Ce nu rezolvă și își va propune proiectul curent să rezolve?)
- [ ] De ce sunt relevante neajunsurile/problemele? 
            (Cum va fi soluționarea lor utilă utilizatorilor? Care vor fi beneficiarii acestei soluții? Cum le va face viața mai bună?)
- [ ] Ce soluție propui? 
             (Ce propui cu adevărat? Ce abordare/idei propui? - Nu detalierea utilitarelor și a tehnologiilor e importantă, ci abordarea si ideea propusă de autor.)
- [ ] Ce obții în final? 
              (Care sunt obiectivele proiectului/soluției/abordării/ideii? Care vor fi rezultatele sale (palpabile sau teoretice)? Ce va exista în final ce până acum nu există?)
- [ ] De ce este soluția propusă
              (cea) mai bună? (De ce altă abordare/idee nu ar fi mai potrivită?)
- [ ] Ce diferențiatori are soluția 
             (față de alte soluții comparabile sau cercetări anterioare - open source sau proprietare)? (Cum te compari cu alte soluții? Dacă alte soluții/abordări rezovlă aceeași problemă cum te compari cu ele, ce aduci în plus? Dacă nu există soluții pentru problema curentă, insistă pe problemă și pe faptul că doar tu o soluționezi în modul pe care-l consideri cel mai potrivit.)
- [ ] Ce cazuri de utilizare sunt avantajoase pentru soluție? 
              (Care sunt scenariile de utilizare în care soluția este relevantă și este folosibilă? De ce în aceste scenarii soluția propusă este superioară altora? - scenariile sunt o întărire a diferențiatorilor)
